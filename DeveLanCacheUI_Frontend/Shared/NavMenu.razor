@using static System.Net.WebRequestMethods;
@inject HttpClient Http

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">DeveLanCacheUI_Frontend</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu" style="position: relative;">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="chattest">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Chat Test
            </NavLink>
        </div>
        <hr /> <!-- Here is the separator -->
        <div class="nav-item px-3">
            <h3 class="nav-link">Steam</h3>
            <NavLink class="nav-link" href="steamlatestdownloads">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Latest Downloads
            </NavLink>
        </div>
    </nav>
    <div class="version-info px-3" style="position: absolute; bottom: 10px; color: white; font-weight: bold;">
        <small>Frontend Version: @FrontendVersion</small>
        <small>Backend Version: @BackendVersion</small>
    </div>
</div>

@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private string backendUrl;

    private string FrontendVersion { get; set; }
    private string BackendVersion { get; set; }

    @inject IJSRuntime JSRuntime

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        backendUrl = await JSRuntime.InvokeAsync<string>("eval", "window.ENV.BACKENDURL");
        if (!backendUrl.EndsWith("/"))
        {
            backendUrl += "/";
        }
        Console.WriteLine($"Loaded Backend Url: {backendUrl}");

        FrontendVersion = GetVersion();

        BackendVersion = await GetBackendVersion();
    }

    private string GetVersion()
    {
        var assembly = System.Reflection.Assembly.GetExecutingAssembly();
        var version = assembly.GetName().Version.ToString();
        return version;
    }

    private async Task<string> GetBackendVersion()
    {
        var status = await Http.GetFromJsonAsync<StatusModel>($"{backendUrl}Status");
        return status.Version;
    }

    public class StatusModel
    {
        public string ApplicationName { get; set; }
        public string Version { get; set; }
        public string UpTime { get; set; }
    }
}
